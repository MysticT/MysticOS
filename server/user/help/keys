Functions in the keys Lib:
- keys.name(key)
	* returns the name of the given key
	* return values:
		- name of the key (string)
	* parameters:
		- the key to get the name (number)
- keys.isLetter(key)
	* returns whether the given key is a letter
	* return values:
		- boolean indicating if the key is a letter (boolean)
	* parameters:
		- key: the key to check (number)
- keys.isNumber(key)
	* returns whether the given key is a number
	* return values:
		- boolean indicating if the key is a number (boolean)
	* parameters:
		- key: the key to check (number)
- keys.isSpace(key)
	* returns whether the given key is a space character
	* return values:
		- boolean indicating if the key is a space character (boolean)
	* parameters:
		- key: the key to check (number)
- keys.isSymbol(key)
	* returns whether the given key is a symbol
	* return values:
		- boolean indicating if the key is a symbol (boolean)
	* parameters:
		- key: the key to check (number)
- keys.isSpecial(key)
	* returns whether the given key is a special key
	* return values:
		- boolean indicating if the key is a special key (boolean)
	* parameters:
		- key: the key to check (number)
- keys.isArrow(key)
	* returns whether the given key is an arrow key
	* return values:
		- boolean indicating if the key is an arrow key (boolean)
	* parameters:
		- key: the key to check (number)
- keys.isFunction(key)
	* returns whether the given key is a function key
	* return values:
		- boolean indicating if the key is a function key (boolean)
	* parameters:
		- key: the key to check (number)
- keys.isChar(key)
	* returns whether the given key is a character (number, letter or symbol)
	* return values:
		- boolean indicating if the key is a char (boolean)
	* parameters:
		- key: the key to check (number)
- keys.fromName(name)
	* returns the key code corresponding to the given name
	* return values:
		- the key corresponding to the name, nil if it doesn't exist (number, nil)
	* parameters:
		- name: the name of the key (string)
- keys.toChar(key)
	* returns the string representation of a key
	* return values:
		- the string representation of the key (string)
	* parameters:
		- key: the key to convert (number)

Available Keys:
- Numbers:
	N[0-9] (N0, N1, N2, etc.)
- Letters
	A-Z (A, B, C, etc.)
- Symbols
	Minus -
	Equals =
	LeftBracket [
	RightBracket ]
	SemiColon ;
	Apostrophe '
	Grave `
	Backslash \
	Comma ,
	Period .
	Slash /
	Circumflex ^
	At @
	Colon :
	Underline _
- Special keys
	Escape, Backspace, Tab, Enter, LCtrl, RCtrl, LShift, RShift, LAlt, RAlt, Space, CapsLock, NumLock, ScrollLock, Home, End, PageUp, PageDown, Insert, Del, LMeta, RMeta, Menu
- Function Keys
	F1-15 (F1, F2, F3, etc.)
- Arrow Keys
	Up, Down, Left, Right
- Numpad Keys
	Pad[0-9] (Pad0, Pad1, Pad2, etc.)
	Multiply, Divide, Subtract, Add, Decimal, PadEquals, PadEnter