Functions in the colors Lib:
- colors.combine(color1, color2, ...)
	* returns the combination of the given colors
	* return values:
		- number representing the combined colors (number)
	* parameters:
		- color1, color2, ...: the colors to combine (number)
- colors.subtract(colors, color1, ...)
	* subtracts the colors given from the combination
	* return values:
		- number representing the combined colors (number)
	* parameters:
		- colors: the combined colors (number)
		- color1, ...: the colors to subtract (number)
- colors.test(colors, color)
	* test if the color "color" is in colors
	* return values:
		- boolean indicating if the color is present (boolean)
	* parameters:
		- colors: the colors to check (number)
		- color: the color to test (number)
- colors.get(name)
	* gets a color by it's name
	* return values:
		- the number that represents the color, nil if it doesn't exist (number, nil)
	* parameters:
		- name: the name of the color (string)
- colors.getName(color)
	* returns a string representation of the given color
	* return values:
		- the color name (string)
	* parameters:
		- color: the color to get it's name (number)
- colors.list()
	* gets a list of the available colors
	* return values:
		- the list of colors (table)

Color constants in the colors api, in ascending bit order:
colors.white, colors.orange, colors.magenta, colors.lightBlue, colors.yellow, colors.lime, colors.pink, colors.gray, colors.lightGray, colors.cyan, colors.purple, colors.blue, colors.brown, colors.green, colors.red, colors.black.