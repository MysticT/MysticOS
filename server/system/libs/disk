-- Disk Lib for MysticOS
--[[
Copyright © 2012 Esteban Hermida a.k.a MysticT

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
associated documentation files (the "Software"), to deal in the Software without restriction,
including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
copies of the Software, and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

-The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
-Visible credit is given to the original author.
-The software is distributed in a non-profit way.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--]]

local function IsDrive(sSide)
	return peripheral.isA(sSide, "drive")
end

-- API functions

function isPresent(sSide)
	if IsDrive(sSide) then
		return peripheral.call(sSide, "isPresent")
	end
	return false
end

function hasData(sSide)
	if IsDrive(sSide) then
		return peripheral.call(sSide, "hasData")
	end
	return false
end

function getMountPath(sSide)
	if IsDrive(sSide) then
		return fs.getDiskMountPath(sSide)
	end
	return nil
end

function setLabel(sSide, label)
	if IsDrive(sSide) then
		peripheral.call(sSide, "setLabel", label)
	end
end

function getLabel(sSide)
	if IsDrive(sSide) then
		return peripheral.call(sSide, "getLabel")
	end
	return nil
end

function hasAudio(sSide)
	if IsDrive(sSide) then
		return peripheral.call(sSide, "hasAudio")
	end
	return false
end

function getAudioTitle(sSide)
	if IsDrive(sSide) then
		return peripheral.call(sSide, "getAudioTitle")
	end
	return nil
end

function playAudio(sSide)
	if IsDrive(sSide) then
		peripheral.call(sSide, "playAudio")
	end
end

function stopAudio(sSide)
	if IsDrive(sSide) then
		peripheral.call(sSide, "stopAudio")
	end
end

function eject(sSide)
	if IsDrive(sSide) then
		peripheral.call(sSide, "eject")
	end
end