-- MysticOS - Server Installer

-- Disable termination
local oldPullEvent = os.pullEvent
os.pullEvent = os.pullEventRaw

-- local vars
local sDiskPath = "disk" -- assume is the first disk
local nW, nH = term.getSize()
local sVersion = "MysticOS - Server"
local sInstallDir = "MOS-S"
local sBootFile = "MysticOS_S_1_0"
local sMultiBootFile = "boot_multi"
local nAdminLevel = 2

-- Helper functions

local function clear()
	term.clear()
	term.setCursorPos(1, 1)
end

local function writeCenter(sText, bCenterY)
	local x, y = term.getCursorPos()
	x = math.ceil((nW / 2) - (#sText / 2))
	if bCenterY then
		y = math.ceil(nH / 2)
	end
	term.setCursorPos(x, y)
	term.write(sText)
end

local function printCenter(...)
	for _,v in ipairs({ ... }) do
		writeCenter(tostring(v))
	end
	print()
end

local function loadBar(sChar, nLen, nTime, bCenter)
	local nSleepTime = nTime / nLen
	sChar = string.sub(sChar, 1, 1)
	if bCenter then
		local x, y = term.getCursorPos()
		x = math.ceil((nW / 2) - (nLen / 2))
		term.setCursorPos(x, y)
	end
	for i = 1, nLen do
		write(sChar)
		sleep(nSleepTime)
	end
end

local function Copy(sPath, sNewPath)
	if fs.exists(sPath) then
		if fs.exists(sNewPath) then
			fs.delete(sNewPath)
		end
		if fs.isDir(sPath) then
			print("Making dir ", sNewPath)
			sleep(0.5)
			fs.makeDir(sNewPath)
			local tFiles = fs.list(sPath)
			for _,sFile in ipairs(tFiles) do
				local ok, err = Copy(fs.combine(sPath, sFile), fs.combine(sNewPath, sFile))
				if not ok then
					return false, err
				end
			end
			return true
		else
			write("Creating file "..sNewPath)
			loadBar(".", 3, math.random(0, 2), false)
			print()
			local ok, err = pcall(fs.copy, sPath, sNewPath)
			if not ok then
				return false, err
			end
			return true
		end
	end
	return false, "No such file or directory "..sPath
end

local function Delete(sPath)
	if fs.exists(sPath) then
		if fs.isDir(sPath) then
			local tFiles = fs.list(sPath)
			for _,sFile in ipairs(tFiles) do
				local ok, err = Delete(fs.combine(sPath, sFile))
				if not ok then
					return false, err
				end
			end
			print("Deleting dir ", sPath)
			sleep(0.5)
			fs.delete(sPath)
			return true
		else
			print("Deleting file "..sPath)
			local ok, err = pcall(fs.delete, sPath)
			if not ok then
				return false, err
			end
			return true
		end
	end
	return false, "No such file or directory "..sPath
end

local function Menu(sTitle, tOptions, bCenter)
	local nSelected = 1
	local function redraw()
		clear()
		if bCenter then
			local y = math.ceil((nH / 2) - ((#tOptions + 1) / 2))
			term.setCursorPos(1, y)
		end
		printCenter(sTitle)
		for i, opt in ipairs(tOptions) do
			if i == nSelected then
				printCenter("["..opt.."]")
			else
				printCenter(opt)
			end
		end
	end
	while true do
		redraw()
		local evt, key = os.pullEvent("key")
		if key == 200 then -- Up
			if nSelected > 1 then
				nSelected = nSelected - 1
			else
				nSelected = #tOptions
			end
		elseif key == 208 then -- Down
			if nSelected < #tOptions then
				nSelected = nSelected + 1
			else
				nSelected = 1
			end
		elseif key == 28 then -- Enter
			clear()
			return nSelected
		end
	end
end

-- Installation functions

local function Install(bMulti)
	if bMulti then
		if not fs.isDir("/boot") then
			if fs.exists("/boot") then
				fs.delete("/boot")
			end
			fs.makeDir("/boot")
		end
		Copy(fs.combine(fs.combine(sDiskPath, "boot"), sMultiBootFile), "/boot.lua")
		Copy(fs.combine(fs.combine(sDiskPath, "boot"), sBootFile), fs.combine("/boot", sBootFile))
	else
		Copy(fs.combine(fs.combine(sDiskPath, "boot"), sBootFile), "/boot.lua")
	end
	local ok, err = Copy(fs.combine(sDiskPath, "Files"), sInstallDir)
	print()
	if ok then
		print(sVersion, " Installed Correctly.")
	else
		print("Error: ", err)
	end
	print("Press any key to continue")
	os.pullEvent("key")
end

local function Uninstall()
	if fs.isDir("/boot") and fs.exists(fs.combine("/boot", sBootFile)) then
		Delete(fs.combine("/boot", sBootFile))
	end
	local ok, err = Delete(sInstallDir)
	print()
	if ok then
		print(sVersion, " Uninstalled Correctly.")
	else
		print("Error: ", err)
	end
	print("Press any key to continue")
	os.pullEvent("key")
end

-- Main Loop

local bExit = false

math.randomseed(os.time())

clear()
writeCenter(sVersion, " Installer", true)
print()
loadBar("|", nW / 2, 2, true)

while not bExit do
	local opt = Menu(sVersion, { "Install", "Uninstall", "Exit" }, true)
	if opt == 1 then -- Install
		local opt = Menu("Choose boot mode:", { "Multi-Boot", "Single-Boot", "Cancel" }, true)
		if opt ~= 3 then
			Install(opt == 1)
		end
	elseif opt == 2 then -- Uninstall
		if Menu("This will delete every file in the os, continue?", { "Yes", "No" }, true) == 1 then
			Uninstall()
		end
	elseif opt == 3 then -- Exit
		bExit = true
	end
end

os.pullEvent = oldPullEvent

os.shutdown()