-- MysticOS System Menu

-- TODO: keyboard support

-- Colors
local backColor = colors.lightGray
local textColor = colors.white

local nScroll = 0
local tMenuOptions = {
	"System Configuration",
	"Reboot",
	"Shutdown",
	"Test"
}
local tMenuActions = {

["System Configuration"] = function()
	-- TODO --
end,

["Reboot"] = function()
	-- TODO: confirmation dialog
	os.reboot()
end,

["Shutdown"] = function()
	-- TODO: confirmation dialog
	os.shutdown()
end,
["Test"] = function()
	os.run("/MysticOS/programs/test")
end
}

local function doMenuItem(i)
	local action = tMenuActions[tMenuOptions[i]]
	if action then
		action()
	end
end

local function redraw()
	graphics.setBackgroundColor(backColor)
	graphics.setTextColor(textColor)
	graphics.clear()
	local n = math.min(#tMenuOptions - nScroll, graphics.getHeight())
	for y = 1, n do
		graphics.write(tMenuOptions[nScroll + y], 1, y)
	end
end

local function onClick(x, y)
	local i = nScroll + y
	if i <= #tMenuOptions then
		doMenuItem(i)
	end
end

function scrollDown()
	if #tMenuOptions > graphics.getHeight() and nScroll < #tMenuOptions then
		nScroll = nScroll + 1
	end
end

function scrollUp()
	if nScroll > 0 then
		nScroll = nScroll - 1
	end
end

while true do
	redraw()
	local evt, btn, x, y = os.pullEvent("mouse_click", "mouse_scroll", "key", "wake")
	if evt == "mouse_click" then
		if btn == 1 then
			onClick(x, y)
		end
	elseif evt == "mouse_scroll" then
		if btn == 1 then
			scrollDown()
		else
			scrollUp()
		end
	elseif evt == "key" then
		if btn == keys.up then
			scrollUp()
		elseif btn == keys.down then
			scrollDown()
		end
	end
end