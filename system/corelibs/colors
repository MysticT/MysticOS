-- MysticOS Colors Lib

white = 1
orange = 2
magenta = 4
lightBlue = 8
yellow = 16
lime = 32
pink = 64
gray = 128
lightGray = 256
cyan = 512
purple = 1024
blue = 2048
brown = 4096
green = 8192
red = 16384
black = 32768

function combine(...)
	return bit32.bor(...)
end

function subtract(c, ...)
	for _,n in ipairs({...}) do
		c = bit.band(c, bit.bnot(n))
	end
	return c
end

function test(c, n)
	return bit.band(c, n) == c
end

local tColorLookup = {}
for i = 1, 16 do
	tColorLookup[string.byte("0123456789abcdef", i)] = 2 ^ (i - 1)
end

function toString(c)
	local i = math.floor(math.logN(c, 2)) + 1
	if i > 0 and i <= 16 then
		return string.at("0123456789abcdef", i)
	end
	return "0"
end

function fromString(s, i)
	return tColorLookup[string.byte(s, i or 1)] or 0
end

local tInvertLookup = {
	[white] = black,
	[orange] = purple,
	[magenta] = lime,
	[lightBlue] = brown,
	[yellow] = blue,
	[lime] = magenta,
	[pink] = green,
	[gray] = lightGray,
	[lightGray] = gray,
	[cyan] = red,
	[purple] = orange,
	[blue] = yellow,
	[brown] = lightBlue,
	[green] = pink,
	[red] = cyan,
	[black] = white
}

function invert(c)
	return tInvertLookup[c]
end