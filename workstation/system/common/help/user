Functions in the User Lib:
- user.login(user, pass)
	* log in as "user"
	* return values:
		- boolean indicating if the username-password is correct (boolean)
		- error message, if any (string, nil)
	* parameters:
		- user: the user's name (string)
		- pass: the user's password (string)
- user.logout()
	* logs out the current user
- user.isLogged()
	* checks if some user has logged in
	* return values:
		- boolean indicating if there's an user logged in (boolean)
- user.getUserName()
	* gets the name of the current user
	* return values:
		- the current user's name (string)
- user.getUserGroup()
	* gets the group name of the current user
	* return values:
		- the current user's group name (string)
- user.getUserLevel()
	* gets the group level of the current user
	* return values:
		- the current user's group level (number, nil on error)
		- error message, if any (string, nil)
- user.createUser(user, pass, group)
	* creates a new user
	* return values:
		- boolean indicating if the user was created (boolean)
		- error message, if any (string, nil)
	* parameters:
		- user: username (string)
		- pass: password (string)
		- group: the user group (string)
- user.removeUser(user)
	* deletes an user
	* return values:
		- boolean indicating if the user was removed (boolean)
		- error message, if any (string, nil)
	* parameters:
		- user: username to delete (string)
- user.changePassword(user, oldPass, newPass)
	* changes the password of user "user"
	* return values:
		- boolean indicating if the password was changed (boolean)
		- error message, if any (string, nil)
	* parameters:
		- user: username (string)
		- oldPass: the old password (string)
		- newPass: the new password (string)
- user.createGroup(group, level)
	* creates a new user group
	* return values:
		- boolean indicating if the group was created (boolean)
		- error message, if any (string, nil)
	* parameters:
		- group: the group's name (string)
		- level: the group's level (number)
- user.removeGroup(group)
	* deletes a group
	* return values:
		- boolean indicating if the group was removed (boolean)
		- error message, if any (string, nil)
	* parameters:
		- group: the name of the group to remove (string)
- user.changeGroupLevel(group, level)
	* changes the level of a group
	* return values:
		- boolean indicating if the group's level was changed (boolean)
		- error message, if any (string, nil)
	* parameters:
		- group: the name of the group to change (string)
		- level: the new level (number)
- user.getUsers()
	* gets a list of registered users
	* return values:
		- list of user names (table, nil)
		- error message, if any (string, nil)
- user.getUserCount()
	* gets the number of registered users
	* return values:
		- the number of users (number, nil)
		- error message, if any (string, nil)
- user.getGroups()
	* gets a list of groups
	* return values:
		- list of group names (table, nil)
		- error message, if any (string, nil)
- user.getGroupCount()
	* gets the number of groups
	* return values:
		- the number of groups (number, nil)
		- error message, if any (string, nil)

Available group levels: NormalLevel, AdminLevel