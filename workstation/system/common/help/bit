Functions in the bit Lib:
- bit.bnot(n)
	* bitwise not (~n)
	* return values:
		- the bitwise not of the given number (number)
	* parameters:
		- n: number to aply bitwise not (number)
- bit.band(m, n)
	* bitwise and (m & n)
	* return values:
		- the bitwise and of the given values (number)
	* parameters:
		- m: (number)
		- n: (number)
- bit.bor(m, n)
	* bitwise or (m | n)
	* return values:
		- the bitwise or of the given values (number)
	* parameters:
		- m: (number)
		- n: (number)
- bit.bxor(m, n)
	* bitwise xor (m ^ n)
	* return values:
		- the bitwise xor of the given values (number)
	* parameters:
		- m: (number)
		- n: (number)
- bit.brshift(n, bits)
	* right shift (n >> bits)
	* return values:
		- the shifted value (number)
	* parameters:
		- n: (number)
		- bits: number of bits to shift (number)
- bit.blshift(n, bits)
	* left shift (n << bits)
	* return values:
		- the shifted value (number)
	* parameters:
		- n: (number)
		- bits: number of bits to shift (number)
- bit.tobits(n)
	* convert n to a bit table
	* return values:
		- the bit table (table)
	* parameters:
		- n: number to convert (number)
- bit.tonumb(bit_tbl)
	* convert a bit table to number
	* return values:
		- the converted number (number)
	* parameters:
		- bit_tbl: table containing the bits to convert (table)